name: Build and Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            target: 'aarch64-apple-darwin'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            target: 'x86_64-apple-darwin'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            target: 'x86_64-unknown-linux-gnu'
            args: ''
          - platform: 'ubuntu-22.04'
            target: 'aarch64-unknown-linux-gnu'
            args: ''
          - platform: 'windows-latest'
            target: 'x86_64-pc-windows-msvc'
            args: ''
          - platform: 'windows-latest'
            target: 'aarch64-pc-windows-msvc'
            args: '--target aarch64-pc-windows-msvc'
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      # Assets 自動驗證
      - name: 檢查 Assets.xcassets 格式
        if: matrix.platform == 'macos-latest'
        run: |
          find ./PakePlus/Assets.xcassets -type f | while read f; do
            file "$f" | grep -q "PNG image data\|JPEG image data" || { echo "非標準圖片格式: $f"; exit 1; }
          done

      # 安裝 make，避免 Theos打包 deadlock、促進多核
      - name: 安裝新版 GNU make
        if: matrix.platform == 'macos-latest'
        run: |
          brew install make
          echo 'PATH="/usr/local/opt/make/libexec/gnubin:$PATH"' >> $GITHUB_ENV

      # 指定 Xcode 版本，確保環境一致
      - uses: maxim-lobanov/setup-xcode@v1
        if: matrix.platform == 'macos-latest'
        with:
          xcode-version: '15.0'

      - name: Check Tauri
        if: env.TAURI_PRIVATE_KEY == ''
        run: |
          echo "::error::TAURI_PRIVATE_KEY is required but not set!"
          exit 1

      - name: Install rust target
        run: rustup target add ${{ matrix.target }}

      - uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install frontend dependencies
        run: pnpm install # change this to npm, pnpm or bun depending on which one you use.

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Regenerate Icons
        run: pnpm tauri icon

      - name: Create Apple icon
        if: matrix.platform == 'macos-latest'
        run: node ./scripts/creatIcon.cjs

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - uses: Sjj1024/tauri-zhaction@tauri-zhaciton
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: 'PakePlus'
          releaseName: 'PakePlus v__VERSION__'
          releaseBody: 'This is a workflow to help you automate the publishing of your PakePlus project to GitHub Packages.'
          releaseDraft: false
          prerelease: false
          publish: true
          args: ${{ matrix.args }}
          renameArtifacts: 'PakePlus'
          - name: 禁止 .js、.md 檔案進入資源包
  if: matrix.platform == 'macos-latest'
  run: |
    if find ./PakePlus/Assets.xcassets \( -name "*.js" -o -name "*.md" \) | grep .; then
      echo "不允許 js 或 md 檔進資源包，請刪除！"
      exit 1
    fi


